import { NextRequest, NextResponse } from 'next/server';
import { Resend } from 'resend';

const resend = new Resend(process.env.RESEND_API_KEY);

export async function POST(req: NextRequest) {
  try {
    const body = await req.json();
    const { description, email, userName, userId, consoleLogs, browserInfo } = body;

    if (!description) {
      return NextResponse.json(
        { error: 'Description is required' },
        { status: 400 }
      );
    }

    // Format the bug report email
    const emailHtml = `
      <!DOCTYPE html>
      <html>
        <head>
          <style>
            body {
              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
              line-height: 1.6;
              color: #333;
              max-width: 800px;
              margin: 0 auto;
              padding: 20px;
            }
            .header {
              background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
              color: white;
              padding: 30px;
              border-radius: 8px 8px 0 0;
            }
            .content {
              background: #f9fafb;
              padding: 30px;
              border: 1px solid #e5e7eb;
            }
            .section {
              background: white;
              padding: 20px;
              margin-bottom: 20px;
              border-radius: 8px;
              border: 1px solid #e5e7eb;
            }
            .section h3 {
              margin-top: 0;
              color: #667eea;
              border-bottom: 2px solid #667eea;
              padding-bottom: 10px;
            }
            .info-grid {
              display: grid;
              grid-template-columns: 150px 1fr;
              gap: 10px;
            }
            .info-label {
              font-weight: 600;
              color: #6b7280;
            }
            .console-logs {
              background: #1f2937;
              color: #e5e7eb;
              padding: 15px;
              border-radius: 6px;
              overflow-x: auto;
              font-family: 'Monaco', 'Menlo', 'Courier New', monospace;
              font-size: 12px;
              white-space: pre-wrap;
              word-wrap: break-word;
            }
            .bug-icon {
              font-size: 48px;
              margin-bottom: 10px;
            }
          </style>
        </head>
        <body>
          <div class="header">
            <div class="bug-icon">üêõ</div>
            <h1 style="margin: 0;">Bug Report from KAYA</h1>
            <p style="margin: 10px 0 0 0; opacity: 0.9;">
              ${new Date().toLocaleString('en-US', {
                dateStyle: 'full',
                timeStyle: 'long'
              })}
            </p>
          </div>

          <div class="content">
            <div class="section">
              <h3>üî¥ Bug Description</h3>
              <p style="white-space: pre-wrap;">${description}</p>
            </div>

            <div class="section">
              <h3>üë§ Reporter Information</h3>
              <div class="info-grid">
                <span class="info-label">Name:</span>
                <span>${userName}</span>

                <span class="info-label">Email:</span>
                <span>${email}</span>

                <span class="info-label">User ID:</span>
                <span>${userId}</span>

                <span class="info-label">Page URL:</span>
                <span>${browserInfo.url}</span>
              </div>
            </div>

            <div class="section">
              <h3>üíª Browser & Device Information</h3>
              <div class="info-grid">
                <span class="info-label">User Agent:</span>
                <span style="word-break: break-all;">${browserInfo.userAgent}</span>

                <span class="info-label">Platform:</span>
                <span>${browserInfo.platform}</span>

                <span class="info-label">Language:</span>
                <span>${browserInfo.language}</span>

                <span class="info-label">Screen:</span>
                <span>${browserInfo.screenResolution}</span>

                <span class="info-label">Viewport:</span>
                <span>${browserInfo.viewport}</span>
              </div>
            </div>

            <div class="section">
              <h3>üìã Console Logs (Last 100 entries)</h3>
              <div class="console-logs">${consoleLogs || 'No logs available'}</div>
            </div>

            <div style="text-align: center; margin-top: 30px; padding-top: 30px; border-top: 2px solid #e5e7eb;">
              <p style="color: #6b7280; font-size: 14px;">
                This bug report was automatically generated by KAYA Bug Reporter
              </p>
            </div>
          </div>
        </body>
      </html>
    `;

    // Send email via Resend using bugs.crucibleanalytics.dev domain
    const data = await resend.emails.send({
      from: 'KAYA Bug Reporter <bugs@bugs.crucibleanalytics.dev>',
      to: ['llanes.joseph.m@gmail.com'],
      replyTo: email,
      subject: `üêõ Bug Report: ${description.substring(0, 50)}${description.length > 50 ? '...' : ''}`,
      html: emailHtml,
    });

    return NextResponse.json({ success: true, data });
  } catch (error: any) {
    console.error('Failed to send bug report:', error);
    return NextResponse.json(
      { error: 'Failed to send bug report', details: error.message },
      { status: 500 }
    );
  }
}
